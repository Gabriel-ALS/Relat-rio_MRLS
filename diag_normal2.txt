#---------------------------------------------------------------#
# Para rodar este programa  deixe no objeto fit.model a sa?da 
# do  ajuste  da  regress?o com  erro normal. Deixe  os dados 
# dispon?veis  atrav?s do comando attach(...). Depois  use  o 
# comando source(...) no S-Plus ou R para executar o programa. 
# A sequ?ncia de comandos ? a seguinte:
#
#        > fit.model <- ajuste
#        > attach(dados)
#        > source("diag_norm")
#
# A sa?da ter? quatro gr?ficos: de pontos de alavanca, de pontos
# influentes  e  dois de res?duos. Para identificar os pontos
# que  mais  se destacam usar o comando identify(...). Se por
# exemplo se destacam tr?s pontos no plot(fitted(fit.model),h,...), 
# ap?s esse comando coloque
#     
#        > identify(fitted(fit.model),h,n=3)
#
# O mesmo pode ser feito nos demais gr?ficos. Nos gr?ficos de 
# res?duos foram tra?ados os limites ylim=c(a-1,b+1), onde a
# ? o menor valor e b o maior valor para o res?duo..Mude esses 
# limites  se  necess?rio.Para voltar a ter apenas um gr?fico 
# por tela fa?a o seguinte:
#
#        > par(mfrow=c(1,1))
# 
#---------------------------------------------------------------#
#
# Configuração inicial dos gráficos
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
H <- X %*% solve(t(X) %*% X) %*% t(X)
h <- diag(H)
lms <- summary(fit.model)
s <- lms$sigma
r <- resid(lms)
ts <- r / (s * sqrt(1 - h))
di <- (1/p) * (h / (1 - h)) * (ts^2)
si <- lm.influence(fit.model)$sigma
tsi <- r / (si * sqrt(1 - h))
a <- max(tsi)
b <- min(tsi)

# Layout de 2x2 para os gráficos
par(mfrow = c(2, 2))

# Gráfico de pontos de alavanca
plot(h, main = "Pontos de alavanca", xlab = "Indice", ylab = "Medida h", pch = 16, ylim = c(0, 1))
abline(h = 2 * p / n, lty = 2)  # Linha de corte
identify(h,tol = 0.5, n = 3)  # Identifica pontos de interesse

# Gráfico de Distância de Cook
plot(di, main = "Pontos Influentes", xlab = "Indice", ylab = "Distancia de Cook", pch = 16)
identify(di, tol = 0.25,n = 2)

# Gráfico de Resíduos Padronizados
plot(tsi, main = "Pontos Aberrantes", xlab = "Indice", ylab = "Resíduo Padronizado", ylim = c(b - 1, a + 1), pch = 16)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
identify(tsi, n = 1)

# Gráfico de Valores Ajustados vs. Resíduos Padronizados
plot(fitted(fit.model), tsi, main = "Homocedasticidade", xlab = "Valores Ajustados", ylab = "Residuo Padronizado", ylim = c(b - 1, a + 1), pch = 16)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
identify(fitted(fit.model), tsi, n = 1)

# Volta para um único gráfico por tela
par(mfrow = c(1, 1))
#---------------------------------------------------------------#

